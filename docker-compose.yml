services:

  db:
    image: postgres:16-alpine
    container_name: db
    ports:
      - 5433:5432
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - backend

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot
    command: "python3 main.py"
    develop:
      watch:
        - path: ./bot
          target: /app/bot
          action: sync+restart
          ignore:
            - "**/__pycache__"
            - "**/*.pyc"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
#      - .:/app
      - /app/__pycache__
      - ./media:/app/media
      - ./alembic.ini:/app/alembic.ini
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  db_data: